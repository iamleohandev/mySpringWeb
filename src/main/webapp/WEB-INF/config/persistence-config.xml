<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
		
<!-- 

Persistence layer infrastructure:

1)Get the datasource  2 good ways to get the datasource (Spring JndiObjectFactoryBean,  Apache DBCP)

2)If you use the jdbc, then create the jdbc template for a given datasource

3)Manage the transaction:
   1.create a transaction manager with the given datasource
   2.use the annotation-driven


 -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/postgres" />
		<property name="lookupOnStartup" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource" />
		<property name="resourceRef" value="true" />
	</bean>


	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
